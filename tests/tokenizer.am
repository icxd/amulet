type Span = class {
  let start: u32;
  let end: u32;
};

type Token = class {
  let kind: u8;
  let literal: c_char*;
  let span: Span;

  let next: Token*;
};

native fn strlen(s: c_char*) -> usz;
native fn putchar(c: c_char);

fn tokenize(source: c_char*)  {
  mut pos = 0usz;
  while pos < strlen(source) {
    let c = source[pos];
    if c == ' ' or c == '\n' or c == '\t' {
      pos += 1usz;
      continue;
    }

    putchar(c);

    pos += 1usz;
  }
}

fn main() {
}